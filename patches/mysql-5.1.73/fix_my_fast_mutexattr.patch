diff --git a/mysys/my_thr_init.c b/mysys/my_thr_init.c
index 076e6eb..ac911d4 100644
--- a/mysys/my_thr_init.c
+++ b/mysys/my_thr_init.c
@@ -24,6 +24,7 @@
 #include "mysys_priv.h"
 #include <m_string.h>
 #include <signal.h>
+#include <my_pthread.h>
 
 #ifdef THREAD
 #ifdef USE_TLS
@@ -45,9 +46,9 @@ pthread_mutex_t LOCK_localtime_r;
 #ifndef HAVE_GETHOSTBYNAME_R
 pthread_mutex_t LOCK_gethostbyname_r;
 #endif
-#ifdef PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
+/*#ifdef PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP*/
 pthread_mutexattr_t my_fast_mutexattr;
-#endif
+/*#endif*/
 #ifdef PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 pthread_mutexattr_t my_errorcheck_mutexattr;
 #endif
@@ -121,7 +122,7 @@ my_bool my_thread_global_init(void)
   }
 #endif /* TARGET_OS_LINUX */
 
-#ifdef PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
+/*#ifdef PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP*/
   /*
     Set mutex type to "fast" a.k.a "adaptive"
 
@@ -134,7 +135,7 @@ my_bool my_thread_global_init(void)
   pthread_mutexattr_init(&my_fast_mutexattr);
   pthread_mutexattr_settype(&my_fast_mutexattr,
                             PTHREAD_MUTEX_ADAPTIVE_NP);
-#endif
+/*#endif*/
 #ifdef PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
   /*
     Set mutex type to "errorcheck"
@@ -205,9 +206,9 @@ void my_thread_global_end(void)
   pthread_mutex_unlock(&THR_LOCK_threads);
 
   pthread_key_delete(THR_KEY_mysys);
-#ifdef PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
+/*#ifdef PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP*/
   pthread_mutexattr_destroy(&my_fast_mutexattr);
-#endif
+/*#endif*/
 #ifdef PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
   pthread_mutexattr_destroy(&my_errorcheck_mutexattr);
 #endif
